package moe.irony.utils

import java.security.MessageDigest

// https://gist.github.com/lovubuntu/164b6b9021f5ba54cefc67f60f7a1a25
//fun ByteArray.hash(): List<Byte> {
//    val bytes = this
//    val md = MessageDigest.getInstance("SHA-1")
//    return md.digest(bytes).toList()
//}

fun String.hash(): String {
    val bytes = this.map { it.code.toByte() }.toByteArray() // 不能用toByteArray(Charsets.ASCII)方法，会出问题
    val md = MessageDigest.getInstance("SHA-1")
    return md.digest(bytes).fold("") { str, it ->
        str + "%02X".format(it)
    }
}

fun main(args: Array<String>) {
    val bytes: List<Byte> = arrayOf(
        0x64, 0x35, 0x3A, 0x66, 0x69, 0x6C, 0x65, 0x73, 0x6C, 0x64, 0x36, 0x3A, 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68, 0x69, 0x36, 0x31, 0x35, 0x65, 0x34,
        0x3A, 0x70, 0x61, 0x74, 0x68, 0x6C, 0x32, 0x36, 0x3A, 0x66, 0x72, 0x65, 0x65, 0x20, 0x61, 0x75, 0x64, 0x69, 0x6F, 0x62, 0x6F, 0x6F, 0x6B, 0x20,
        0x76, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x2E, 0x74, 0x78, 0x74, 0x65, 0x65, 0x64, 0x36, 0x3A, 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68, 0x69, 0x33,
        0x39, 0x33, 0x34, 0x31, 0x37, 0x65, 0x34, 0x3A, 0x70, 0x61, 0x74, 0x68, 0x6C, 0x36, 0x31, 0x3A, 0x57, 0x61, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74,
        0x5F, 0x20, 0x4F, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6C, 0x20, 0x4D, 0x6F, 0x76, 0x69, 0x65, 0x20, 0x4E, 0x6F, 0x76, 0x65, 0x6C, 0x69, 0x7A,
        0x61, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x62, 0x79, 0x20, 0x43, 0x68, 0x72, 0x69, 0x73, 0x74, 0x69, 0x65, 0x20, 0x47, 0x6F, 0x6C, 0x64, 0x65, 0x6E,
        0x2E, 0x65, 0x70, 0x75, 0x62, 0x65, 0x65, 0x65, 0x34, 0x3A, 0x6E, 0x61, 0x6D, 0x65, 0x36, 0x31, 0x3A, 0x57, 0x61, 0x72, 0x63, 0x72, 0x61, 0x66,
        0x74, 0x5F, 0x20, 0x4F, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6C, 0x20, 0x4D, 0x6F, 0x76, 0x69, 0x65, 0x20, 0x4E, 0x6F, 0x76, 0x65, 0x6C, 0x69,
        0x7A, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x62, 0x79, 0x20, 0x43, 0x68, 0x72, 0x69, 0x73, 0x74, 0x69, 0x65, 0x20, 0x47, 0x6F, 0x6C, 0x64, 0x65,
        0x6E, 0x20, 0x45, 0x50, 0x55, 0x42, 0x31, 0x32, 0x3A, 0x70, 0x69, 0x65, 0x63, 0x65, 0x20, 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68, 0x69, 0x31, 0x30,
        0x34, 0x38, 0x35, 0x37, 0x36, 0x65, 0x36, 0x3A, 0x70, 0x69, 0x65, 0x63, 0x65, 0x73, 0x32, 0x30, 0x3A, 0x43, 0x92, 0x4C, 0x22, 0xBB, 0x42, 0x9E,
        0xEA, 0xBD, 0xFF, 0x66, 0xC6, 0x79, 0x4C, 0x29, 0xE4, 0xF9, 0xD0, 0xF3, 0xB9, 0x65
    ).map { it.toByte() }

    bytes.forEachIndexed { i, it ->
        if (i % 24 == 0) println()
        print("${"%02x".format(it)} ")
    }

    println()

//    println(bytes.toByteArray().hash())
//    println(bytes.toByteArray().hash().fold("") { str, it -> str + "%02x".format(it) })

    val sstr = bytes.map { it.toInt().toChar() }.joinToString("")
    println(sstr)
    sstr.map { it.code.toByte() }.forEachIndexed { i, it ->
        if (i % 24 == 0) println()
        print("${"%02x".format(it)} ")
    }

    println()
    println(sstr.hash())

//    val str = String(bytes.toByteArray(), Charsets.US_ASCII)
//    str.toByteArray(Charsets.US_ASCII).forEachIndexed { i, it ->
//        if (i % 24 == 0) println()
//        print("${"%02x".format(it)} ")
//    }
//    println(str)
//    println(str.hash())


}